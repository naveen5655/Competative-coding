#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
void dfsRec(vector<int> adj[], vector<bool> &visited, int u,vector<int> &ans)
    {
        visited[u] = true;
        ans.push_back(u);
        // use any one way
        // for(auto j:adj[u])
        // {
        //     if(visited[j]==false)
        //     {
        //         visited[j] = true;
        //         dfsRec(adj,visited,j,ans);
        //     }
        // }
        for(int i=0;i<adj[u].size();i++)
        {
            if(visited[adj[u][i]]==false)
            {
                visited[adj[u][i]] = true;
                dfsRec(adj,visited,adj[u][i],ans);
            }
        }
    }
    void dfs(int V, vector<int> adj[]) {
        vector<int> ans;
        vector<bool> visited(V,false);
        for(int i=0;i<V;i++)
        {
            if(visited[i]==false)
              dfsRec(adj,visited,i, ans);
        }
        for(auto i:ans)
        {
            cout<<i<<" ";
        }
    }
int main()
{
    int n,e;
    cin>>n>>e;
    vector<int> adj[n];
    for(int i=0;i<e;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    dfs(n,adj);
    
}