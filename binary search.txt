//binary search normal:
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
void solve(ll n, vector<ll> &a)
{
    ll key ;
    cin>>key;
    ll low=0,high=a.size()-1, mid = 0;
    bool flag = false;
    while(low<=high)
    {
        mid = low+((high-low)>>1);
        if(a[mid]==key)
        {
            flag = true;
            break;
        }
        else if(a[mid]<key)
        {
          low = mid+1;   
        }
        else
        {
            high = mid-1;
        }
    }
    if(flag)
     cout<<"YES\n";
    else
     cout<<"NO\n";
    
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    ll n,k;
    cin>>n>>k;
    vector<ll> v(n);
    for(ll i=0;i<n;i++)
    {
        cin>>v[i];
    }
    while(k--)
    {
        solve(n,v);
    }
}
------------------>
2. Closes to left:
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
void solve(ll n, vector<ll> &a)
{
    ll x;
    cin>>x;
    ll low = -1,high=n,mid=0;
    while(low+1<high)
    {
        mid = low + ((high-low)>>1);
        if(a[mid]<=x)
         low=mid;
        else
         high=mid;
    }
    cout<<low+1<<"\n";
    
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    ll n,k;
    cin>>n>>k;
    vector<ll> v(n);
    for(ll i=0;i<n;i++)
    {
        cin>>v[i];
    }
    while(k--)
    {
        solve(n,v);
    }
}
------------------->
