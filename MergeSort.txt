With Size fixed: high - low + 1 
--------------------------------------->
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll ans = 0;
void merge(vector<ll> &v,ll low,ll mid,ll high)
{
  vector<ll> t(high-low+1);
  ll left=low,right=mid+1,k=0;
  while(left<=mid && right<=high)
  {
    if(v[left]<=v[right])
    {
      t[k++]=v[left++];
    }
    else{
     t[k++]=v[right++];
    }
  }
  // right crossed
  while(left<=mid)
  {
    t[k++]=v[left++];
  }
  //left crossed
  while(right<=high)
  {
    t[k++]=v[right++];
  }
  for(ll i=low;i<=high;i++)
  {
    v[i]=t[i-low];
  }
}
void mergeSort(vector<ll> &v, ll low,ll high)
{
  if(low>=high)
    return;
  ll mid =(low+high)>>1;
  mergeSort(v,low,mid);
  mergeSort(v,mid+1,high);
  merge(v,low,mid,high);
}
int main()
{
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  ll t;
  cin>>t;
  while(t--)
  {
    ll n;
    cin>>n;
    vector<ll> v(n);
    for(ll i=0;i<n;i++)
     cin>>v[i];
    mergeSort(v,0,n-1);
    for(ll i=0;i<n;i++)
     cout<<v[i]<<" ";
     cout<<"\n";
  }
}
--------------------------------->
with out size()
------------------------------>
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll ans = 0;
void merge(vector<ll> &v,ll low,ll mid,ll high)
{
	vector<ll> t;
	ll left=low,right=mid+1;
	while(left<=mid && right<=high)
	{
		if(v[left]<=v[right])
		{
			t.push_back(v[left]);
			left++;
		}
		else{
		 t.push_back(v[right]);
		 right++;
		}
	}
	// right crossed
	while(left<=mid)
	{
		t.push_back(v[left]);
		left++;
	}
	//left crossed
	while(right<=high)
	{
		t.push_back(v[right]);
		right++;
	}
	for(ll i=low;i<=high;i++)
	{
		v[i]=t[i-low];
	}
}
void mergeSort(vector<ll> &v, ll low,ll high)
{
	if(low>=high)
	  return;
	ll mid =(low+high)>>1;
	mergeSort(v,low,mid);
	mergeSort(v,mid+1,high);
	merge(v,low,mid,high);
}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	ll t;
	cin>>t;
	while(t--)
	{
		ll n;
		cin>>n;
		vector<ll> v(n);
		for(ll i=0;i<n;i++)
		 cin>>v[i];
		mergeSort(v,0,n-1);
		for(ll i=0;i<n;i++)
		 cout<<v[i]<<" ";
		 cout<<"\n";
	}
}