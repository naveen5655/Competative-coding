#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define vll vector<ll>
void merge(vll &v, ll low, ll mid,ll high)
{
    vll t(high-low+1);
    ll i=low,j=mid+1,k=0;
    while(i<=mid && j<=high)
    {
        if(v[i]<=v[j])
            t[k++]=v[i++];
        else
            t[k++]=v[j++];
    }
    while(i<=mid)
    {
        t[k++] = v[i++];
    }
    while(j<=high)
    {
        t[k++] = v[j++];
    }
    for(int i=low,k=0;i<=high;i++,k++)
    {
        v[i] = t[k];
    }
   
}
void mergeSortHelper(vll &v,ll low, ll high)
{
    if(low>=high)// Empty array
     return;
    ll mid = low +((high-low)>>1);
    mergeSortHelper(v,low,mid);
    mergeSortHelper(v,mid+1,high);
    merge(v,low,mid,high);
}
void mergeSort(vll &v)
{
    mergeSortHelper(v,0,v.size()-1);
}
int main()
{
	ll t;
	cin>>t;
	while(t--)
	{
	    ll n;
	    cin>>n;
	    vll v(n);
	    for(ll i=0;i<n;i++)
	    {
	        cin>>v[i];
	    }
	    mergeSort(v);
	    for(auto i:v)
        {
          cout<<i<<" ";
        }
         cout<<"\n";
	}
	return 0;
}
