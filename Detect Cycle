bool find(int V, vector<int> adj[],int s,vector<bool> &visited)
    {
        vector<int> parent(V,-1);
        queue<int> q;
        q.push(s);
        visited[s]=true;
        while(!q.empty())
        {
            int node = q.front();
            q.pop();
            for(auto ele:adj[node])
            {
                if(visited[ele]==false)
                {
                    visited[ele]=true;
                    parent[ele] = node;
                    q.push(ele);
                }
                else
                {
                   if(parent[node] != ele)
                    return true;
                }
            }
        }
        return false;
    }
    bool isCycle(int V, vector<int> adj[]) {
        
        vector<bool> visited(V,false);
        for(int i=0;i<V;i++)
        {
            if(visited[i]==false)
            {
               if(find(V,adj, i,visited))
                return true;
            }
        }
        
        return false;
    }
