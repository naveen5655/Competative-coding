1. sieve Algorithm:

import java.util.*;
public class Main
{
     public static int a[] = new int[10000005];
      public static   int c[] = new int[10000005];
    public static void createSieve()
    {
       
       int  n = 1000000;
        for(int i=2;i<=n;i++) a[i]=1;
        for(int i=2;i*i<=n;i++)
        {
            c[i]++;
            if(a[i]==1)
            {
                for(int j=i*i;j<=n;j=j+i)
                {
                    a[j]=0;
                }
            }
        }
       
    }
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    long t = sc.nextLong();
	    createSieve();
	    while(t-->0)
	    {
	        int n = sc.nextInt();
	        createSieve();
	        if(a[n]==1)
	        System.out.println("yes");
	        else
	        System.out.println("No");
	        
	    }
	    sc.close();
		
	}
}

----------------------------------------------------->
2. Minimum primeFacotr
import java.util.*;
public class Main
{
    public static int a[] = new int[10000005];
    public static   int c[] = new int[10000005];
    public static void createSieve()
    {
       
        int  n = 1000000;
        for(int i=1;i<=n;i++) a[i]=i;
        for(int i=2;i*i<=n;i++)
        {
            if(a[i]==i)
            {
                for(int j=i*i;j<=n;j=j+i)
                {
                    if(a[j]==j)
                    a[j]=i;
                }
            }
        }
       
    }
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    long t = sc.nextLong();
	    createSieve();
	    while(t-->0)
	    {
	        int n = sc.nextInt();
	        createSieve();
	        System.out.println(a[n]);
	    }
	    sc.close();
		
	}
}
----------------------------------------------------->
3. Find number of primes

#include <bits/stdc++.h>
using namespace std;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin>>n;
    map<int ,int> mp;
    for(int i=2;i*i<=n;i++)
    {
        while(n%i==0)
        {
            n = n / i;
            mp[i]++;
        }
    }
    if(n>=2)
    {
      mp[n]++;
    }
    int ans =1 ;
    for(auto i:mp)
    {
        ans = ans * (pow(i.first,i.second)-pow(i.first,i.second-1));
    }
    cout<<ans;
    return 0;
}

